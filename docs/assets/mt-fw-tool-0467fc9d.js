import{_ as p,o as _,c as d,a as t,t as f,f as u,b,g as k,h as g,v as x,i as y,p as S,e as T}from"./index-3560d8e5.js";const I={class:"ProfileCard"},$={__name:"Title",props:{name:{type:String,required:!0}},setup(n){return(r,c)=>(_(),d("div",I,[t("h2",null,f(n.name),1)]))}},D=p($,[["__scopeId","data-v-9b4110a9"]]);const m=n=>(S("data-v-ace72ffe"),n=n(),T(),n),B={class:"container"},C=m(()=>t("p",null," Quickly generate firewall rules (for RouterOS devices), that will separate and block traffic between networks provided in the input. ",-1)),F=["onSubmit"],P=m(()=>t("button",{type:"submit",class:"submit-btn"},"Generate Pairs",-1)),V={key:0,class:"output"},E={__name:"mt-fw-tool",setup(n){const r=u(""),c=u(!1),i=u(""),v=o=>{let s=[];for(let e=0;e<o.length;e++)for(let a=0;a<o.length;a++)e!==a&&s.push([o[e],o[a]]);return s},h=o=>{o.preventDefault();const s=r.value.split(`
`).map(l=>l.trim()),e=v(s);c.value=!0;let a="";e.forEach(l=>{a+=`/ip firewall filter add chain=forward src-address=${l[0]} dst-address=${l[1]} action=drop comment="Block ${l[0]}<->${l[1]}";
`}),i.value=a},w=()=>{r.value="",c.value=!1,i.value=""};return(o,s)=>(_(),d("main",null,[t("div",B,[b(D,{name:"Mikrotik Firewall Tool"}),C,t("form",{onSubmit:k(h,["prevent"]),class:"form"},[g(t("textarea",{"onUpdate:modelValue":s[0]||(s[0]=e=>r.value=e),placeholder:"Enter networks with CIDR notation (one per line)",class:"textarea"},null,512),[[x,r.value]]),t("div",{class:"button-container"},[P,t("button",{type:"button",onClick:w,class:"reset-btn"}," Reset ")])],40,F),c.value?(_(),d("pre",V,f(i.value),1)):y("",!0)])]))}},N=p(E,[["__scopeId","data-v-ace72ffe"]]);export{N as default};
